[
    {
        "id": 1,
        "projectName": "소파",
        "description": "사이드 프로젝트, 스터디 팀원 매칭 사이트입니다",
        "link": "https://sopa.life",
        "skills": [
            "nextjs",
            "tailwindcss",
            "typescript",
            "recoil"
        ],
        "whatILearned": [
            {
                "id": 1,
                "title": "서버측에서 가져온 데이터와 클라이언트 측 Apollo Cache 동기화",
                "content": " 1) 로직 현재 소파의 프론트엔드는 Next로, 백엔드는 Apollo로 구현되어 있습니다. 관심버튼을 누르면 Mutation처리 후 즉각적인 cache 수정을 통해 게시글의 관심의 개수가 +1이 되도록 로직을 구성했고 Next가 제공하는 getServerSideProps에서 query요청을 보내는 작업, 즉 SSR로 게시글 데이터를 요청한 후 pageProps를 통해 클라이언트 쪽으로 넘기는 작업이 있었습니다. 2) 문제그런데 왜인지 이렇게 가져온 게시글 데이터에 관심버튼을 눌러도 Mutation요청은 가지만 Cache가 즉각적으로 수정되지 않았습니다. 앱이 렌더링 되었을 때 SSR로 가져온 게시글 데이터의 관심버튼을 누른다고 해도 클라이언트의 Apollo Cache에 반영되지 않는다는 것만 알 뿐 그 이유를 못 찾아 하루를 꼬박 샌 적이 있습니다. 스택오버플로우와 구글링을 통해 결국 알아낸 점은 SSR로 가져온 데이터와 클라이언트 측의 Apollo Cache는 동기화가 되지 않은 상태란 것이었습니다. 따라서 SSR로 가져온 데이터에 관심버튼을 누른다고 해도 즉각적인 Cache수정은 일어나지 않는 것이었습니다.3) 해결그렇다고 SSR을 통한 SEO개선과 빠른 첫 화면 제공의 장점을 포기할 수도, 유저가 인터랙티브함을 느낄 수 있는 Cache조작을 포기할 수도 없는 노릇이었습니다. SSR으로 가져온 데이터와 클라이언트의 Apollo Cache를 동기화시킬 방법을 몇 시간동안 고민한 결과 나온 해결책은 SSR로 게시글 데이터를 query 요청을 해서 가져오되 그 데이터가 아닌! SSR로 데이터를 처리한 후 생긴 Cache를 extract하여 클라이언트 측으로 보내주고 pageProps로 이를 받아 클라이언트 쪽에서 자신의 Cache로 restore 시키는 방법이었습니다. 다행히 Cache간 동기화가 되어 정상 작동되었고 2~3일을 매달려 해결한 문제였기에 뇌리에서 잊혀지지 않는 이슈였습니다."
            }
        ],
        "duration": "22.02.04 ~ 22.03.06"
    }
]